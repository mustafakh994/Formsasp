version: '3.8'

services:
  # SQL Server Database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: forms-management-db
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong!Passw0rd
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - forms-management-network
    restart: unless-stopped

  # Forms Management API
  api:
    build:
      context: .
      dockerfile: FormsManagementApi/Dockerfile
    container_name: forms-management-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=FormsManagementDb;User Id=sa;Password=YourStrong!Passw0rd;TrustServerCertificate=true;MultipleActiveResultSets=true
      - JwtSettings__SecretKey=ProductionSecretKeyThatIsAtLeast32CharactersLongForSecurity!
      - JwtSettings__Issuer=FormsManagementAPI
      - JwtSettings__Audience=FormsManagementClients
      - JwtSettings__ExpirationInMinutes=60
      - JwtSettings__RefreshTokenExpirationInDays=7
    ports:
      - "8080:80"
    depends_on:
      - sqlserver
    networks:
      - forms-management-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache (optional, for future caching needs)
  redis:
    image: redis:7-alpine
    container_name: forms-management-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - forms-management-network
    restart: unless-stopped
    command: redis-server --appendonly yes

volumes:
  sqlserver_data:
    driver: local
  redis_data:
    driver: local

networks:
  forms-management-network:
    driver: bridge